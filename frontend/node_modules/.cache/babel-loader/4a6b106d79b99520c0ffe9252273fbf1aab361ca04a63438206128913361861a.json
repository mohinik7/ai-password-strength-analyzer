{"ast":null,"code":"var _jsxFileName = \"D:\\\\password_strength_analyzer\\\\Password_strength_analyzer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PasswordInput from \"./components/PasswordInput\";\nimport AnalysisResult from \"./components/AnalysisResult\";\nimport Visualization from \"./components/Visualization\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async () => {\n    // Clear previous results and errors\n    setError(null);\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/analyze\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setResult(data);\n    } catch (err) {\n      console.error(\"Failed to analyze password:\", err);\n      setError(\"Failed to connect to server. Make sure the backend is running on port 5000.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Password Strength Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n      password: password,\n      setPassword: setPassword,\n      handleSubmit: handleSubmit,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        color: \"red\",\n        marginTop: \"10px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Visualization, {\n      score: result ? result.heuristic_strength : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnalysisResult, {\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lDbwfU0X7LidhMx0pYedXkfmQ4o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PasswordInput","AnalysisResult","Visualization","jsxDEV","_jsxDEV","App","_s","password","setPassword","result","setResult","error","setError","loading","setLoading","handleSubmit","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginTop","score","heuristic_strength","_c","$RefreshReg$"],"sources":["D:/password_strength_analyzer/Password_strength_analyzer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PasswordInput from \"./components/PasswordInput\";\r\nimport AnalysisResult from \"./components/AnalysisResult\";\r\nimport Visualization from \"./components/Visualization\";\r\n\r\nfunction App() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    // Clear previous results and errors\r\n    setError(null);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/analyze\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setResult(data);\r\n    } catch (err) {\r\n      console.error(\"Failed to analyze password:\", err);\r\n      setError(\r\n        \"Failed to connect to server. Make sure the backend is running on port 5000.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Password Strength Analyzer</h1>\r\n      <PasswordInput\r\n        password={password}\r\n        setPassword={setPassword}\r\n        handleSubmit={handleSubmit}\r\n        loading={loading}\r\n      />\r\n\r\n      {error && (\r\n        <div\r\n          className=\"error-message\"\r\n          style={{ color: \"red\", marginTop: \"10px\" }}\r\n        >\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      <Visualization score={result ? result.heuristic_strength : 0} />\r\n      <AnalysisResult result={result} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}